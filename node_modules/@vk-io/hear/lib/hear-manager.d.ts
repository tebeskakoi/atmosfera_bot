import { Context } from 'vk-io';
import { Middleware } from 'middleware-io';
import { HearConditions } from './types';
export declare class HearManager<C extends Context> {
    private composer;
    private fallbackHandler;
    private composed;
    constructor();
    get length(): number;
    get middleware(): Middleware<C>;
    hear<T = {}>(hearConditions: HearConditions<C & T>, handler: Middleware<C & T>): this;
    /**
     * A handler that is called when handlers are not found
     */
    onFallback(handler: Middleware<C>): this;
    private recompose;
}
